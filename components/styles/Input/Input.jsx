import React, { useState } from "react";
import classes from "./Input.module.scss";

const Input = (props) => {
   const { error, span, icon, iconClick, ...inputProps } = props;
   const [focused, setFocused] = useState(false);

   const handleFocus = () => {
      setFocused(true);
   };

   return (
      <div id="input" className={classes.input}>
         <input
            focused={focused.toString()}
            onBlur={handleFocus}
            onChange={inputProps.onChange}
            {...inputProps}
         />

         {/* password show icon */}
         {icon ? (
            <svg
               style={{ opacity: "0.5" }}
               width="24"
               height="24"
               viewBox="0 0 24 24"
               fill="none"
               xmlns="http://www.w3.org/2000/svg"
               onClick={iconClick}
            >
               <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M4.14396 11.546C4.69542 12.4759 5.34514 13.3439 6.08196 14.135C7.53196 15.68 9.53596 17.09 12 17.09C14.464 17.09 16.468 15.68 17.918 14.133C18.6547 13.3422 19.3045 12.4746 19.856 11.545C19.3045 10.6151 18.6548 9.74711 17.918 8.956C16.468 7.41 14.464 6 12 6C9.53596 6 7.53196 7.41 6.08196 8.957C5.34517 9.7478 4.69545 10.6154 4.14396 11.545V11.546ZM21 11.546L21.894 11.098L21.893 11.095L21.89 11.088L21.88 11.07C21.8294 10.9698 21.7761 10.8711 21.72 10.774C21.065 9.62538 20.2791 8.55658 19.378 7.589C17.758 5.863 15.262 4 12 4C8.73796 4 6.23996 5.863 4.62296 7.589C3.7214 8.55647 2.93515 9.62529 2.27996 10.774C2.22502 10.8718 2.17168 10.9705 2.11996 11.07L2.10996 11.088L2.10696 11.095V11.097C2.10696 11.097 2.10596 11.098 2.99996 11.546L2.10596 11.098C2.03644 11.2369 2.00024 11.3901 2.00024 11.5455C2.00024 11.7009 2.03644 11.8541 2.10596 11.993L2.99996 11.546L2.10596 11.993V11.994L2.10696 11.996L2.10996 12.002L2.11996 12.022C2.17094 12.1216 2.22429 12.22 2.27996 12.317C2.93515 13.4657 3.7214 14.5345 4.62296 15.502C6.23996 17.228 8.73696 19.091 12 19.091C15.263 19.091 17.76 17.228 19.377 15.502C20.2785 14.5345 21.0647 13.4657 21.72 12.317C21.7749 12.2192 21.8282 12.1205 21.88 12.021L21.89 12.002L21.893 11.996V11.994C21.893 11.994 21.894 11.993 21 11.546ZM21 11.546L21.894 11.993C22.035 11.711 22.034 11.379 21.894 11.098L21 11.545V11.546Z"
                  fill="#6C6C6C"
               />
               <path
                  fillRule="evenodd"
                  clipRule="evenodd"
                  d="M11.9999 10.09C11.614 10.09 11.2439 10.2433 10.9711 10.5162C10.6982 10.789 10.5449 11.1591 10.5449 11.545C10.5449 11.9309 10.6982 12.301 10.9711 12.5738C11.2439 12.8467 11.614 13 11.9999 13C12.3858 13 12.7559 12.8467 13.0288 12.5738C13.3016 12.301 13.4549 11.9309 13.4549 11.545C13.4549 11.1591 13.3016 10.789 13.0288 10.5162C12.7559 10.2433 12.3858 10.09 11.9999 10.09ZM8.54592 11.545C8.53812 11.0864 8.62171 10.6308 8.79181 10.2049C8.96191 9.77893 9.21512 9.39111 9.53667 9.06404C9.85823 8.73696 10.2417 8.47719 10.6647 8.29987C11.0877 8.12254 11.5418 8.03122 12.0004 8.03122C12.4591 8.03122 12.9132 8.12254 13.3362 8.29987C13.7592 8.47719 14.1426 8.73696 14.4642 9.06404C14.7857 9.39111 15.0389 9.77893 15.209 10.2049C15.3791 10.6308 15.4627 11.0864 15.4549 11.545C15.4549 12.4613 15.0909 13.3401 14.443 13.9881C13.795 14.636 12.9162 15 11.9999 15C11.0836 15 10.2048 14.636 9.55687 13.9881C8.90893 13.3401 8.54492 12.4613 8.54492 11.545H8.54592Z"
                  fill="#6C6C6C"
               />
            </svg>
         ) : null}

         {/* error span */}
         {span == true ? (
            <span
               style={{
                  display: props.required ? "none" : "block",
                  color: !props.required ? "#6C6C6C" : "#ff7676",
               }}
               className={classes.input_error}
            >
               {error}
            </span>
         ) : null}
      </div>
   );
};

export default Input;
